
In [158]: all_data = [['Tom', 'Billy', 'Jefferson', 'Andrew', 'Wesley', 'Steven', 'Joe'], ['Susie', 'Casey', 'Jill', 'Ana', 'Eva', 'Jennifer', 'Sephanie']]

In [159]: result = [name for names in all_data for name in names if name.count('e' >= 2)]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-159-95275d1091f9> in <module>()
----> 1 result = [name for names in all_data for name in names if name.count('e' >= 2)]

TypeError: expected a string or other character buffer object

In [160]: result = [name for names in all_data for name in names
   .....:       if name.count('e') >= 2
   .....: 
   .....: ]

In [161]: result
Out[161]: ['Jefferson', 'Wesley', 'Steven', 'Jennifer', 'Sephanie']

In [162]: all_in_one = [name for names in all for name in names]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-162-9b1cc9dbeaef> in <module>()
----> 1 all_in_one = [name for names in all for name in names]

TypeError: 'builtin_function_or_method' object is not iterable

In [163]: all_in_one = [name for names in all_data for name in names]

In [164]: all
all         all_data    all_in_one  

In [164]: all_in_one
Out[164]: 
['Tom',
 'Billy',
 'Jefferson',
 'Andrew',
 'Wesley',
 'Steven',
 'Joe',
 'Susie',
 'Casey',
 'Jill',
 'Ana',
 'Eva',
 'Jennifer',
 'Sephanie']

In [165]: states = [' Alabama ', 'Georgia!', 'Georgia', 'georgia', 'FlOrIda', 'south carolina##', 'West virginia?']

In [166]: def remove_punctuation(value):
   .....:       return re.sub('[!#?]', ' ', value)
   .....: 

In [167]: clean_ops = [str.strip, remove_punctuation, str.title]

In [168]: def clean_strings(str.strip, ops):
   .....:       result = []
   .....:       for value in strings:
   .....:               for function in ops:
   .....:                       value = function(value)
   .....:             result.append(value)
   .....:             return result
   .....:         
  File "<ipython-input-168-f5d827b16689>", line 1
    def clean_strings(str.strip, ops):
                         ^
SyntaxError: invalid syntax


In [169]: def clean_strings(strings, ops):
   .....:       result = []
   .....:       for value in strings:
   .....:               for function in ops:
   .....:               value = function(value)
   .....:             result.append()
   .....:             return result
   .....:         
  File "<ipython-input-169-ab599c06b0fe>", line 5
    value = function(value)
        ^
IndentationError: expected an indented block

If you want to paste code into IPython, try the %paste and %cpaste magic functions.

In [170]: def clean_strings(strings, ops):
        result = []
        for value in strings:
                for function in ops:
                value = function(value)
            result.append()     
            return result
Display all 607 possibilities? (y or n)
%%!                        _12                        _i7
%%HTML                     _121                       _i70
%%SVG                      _123                       _i71
%%bash                     _13                        _i72
%%capture                  _133                       _i73
%%debug                    _134                       _i74
%%file                     _139                       _i75
%%html                     _140                       _i76
%%javascript               _143                       _i77
%%latex                    _144                       _i78
%%perl                     _145                       _i79
%%prun                     _146                       _i8
%%pypy                     _147                       _i80
%%python                   _151                       _i81
%%python2                  _161                       _i82
%%python3                  _164                       _i83
%%ruby                     _17                        _i84
%%script                   _18                        _i85
%%sh                       _22                        _i86
%%svg                      _25                        _i87
%%sx                       _27                        _i88
%%system                   _28                        _i89
%%time                     _29                        _i9
%%timeit                   _33                        _i90
%%writefile                _34                        _i91
%alias                     _35                        _i92
%alias_magic               _36                        _i93
%autocall                  _37                        _i94
%autoindent                _38                        _i95
%automagic                 _39                        _i96
%bookmark                  _41                        _i97
%cat                       _45                        _i98
%cd                        _47                        _i99
%clear                     _49                        _ih
%colors                    _50                        _ii
%config                    _52                        _iii
%cp                        _53                        _oh
%cpaste                    _55                        _sh
%debug                     _56                        a
%dhist                     _57                        abs
%dirs                      _58                        add_and_maybe_multiply
%doctest_mode              _60                        all
%ed                        _62                        all_data
%edit                      _65                        all_in_one
%env                       _66                        amber_test
%gui                       _67                        anaconda
%hist                      _68                        and
%history                   _70                        android
%install_default_config    _78                        any
%install_ext               _81                        append_element
%install_profiles          _83                        apply
%killbgscripts             _85                        as
%ldir                      _90                        assert
%less                      _91                        attempt_float
%lf                        _92                        b
%lk                        __                         basestring
%ll                        __IPYTHON__                bin
%load                      __IPYTHON__active          bool
%load_ext                  ___                        break
%loadpy                    __builtin__                buffer
%logoff                    __debug__                  bytearray
%logon                     __doc__                    bytes
%logstart                  __import__                 c
%logstate                  __name__                   callable
%logstop                   __package__                chr
%ls                        _dh                        class
%lsmagic                   _i                         classmethod
%lx                        _i1                        clean_ops
%macro                     _i10                       cmp
%magic                     _i100                      coerce
%man                       _i101                      compile
%matplotlib                _i102                      complex
%mkdir                     _i103                      continue
%more                      _i104                      copyright
%mv                        _i105                      credits
%notebook                  _i106                      curl
%page                      _i107                      cval
%paste                     _i108                      date
%pastebin                  _i109                      datetime
%pdb                       _i11                       def
%pdef                      _i110                      del
%pdoc                      _i111                      delattr
%pfile                     _i112                      dict
%pinfo                     _i113                      dir
%pinfo2                    _i114                      divmod
%popd                      _i115                      dreload
%pprint                    _i116                      dt
%precision                 _i117                      elif
%profile                   _i118                      else
%prun                      _i119                      enumerate
%psearch                   _i12                       eval
%psource                   _i120                      except
%pushd                     _i121                      exec
%pwd                       _i122                      execfile
%pycat                     _i123                      exit
%pylab                     _i124                      experiments
%quickref                  _i125                      file
%recall                    _i126                      filter
%rehashx                   _i127                      finally
%reload_ext                _i128                      first_names
%rep                       _i129                      float
%rerun                     _i13                       for
%reset                     _i130                      format
%reset_selective           _i131                      from
%rm                        _i132                      frozenset
%rmdir                     _i133                      get_ipython
%run                       _i134                      getattr
%save                      _i135                      global
%sc                        _i136                      globals
%set_env                   _i137                      hasattr
%store                     _i138                      hash
%sx                        _i139                      help
%system                    _i14                       hex
%tb                        _i140                      i
%time                      _i141                      id
%timeit                    _i142                      if
%unalias                   _i143                      import
%unload_ext                _i144                      in
%who                       _i145                      input
%who_ls                    _i146                      int
%whos                      _i147                      intern
%xdel                      _i148                      is
%xmode                     _i149                      isinstance
Applications               _i15                       isiterable
ArithmeticError            _i150                      issubclass
AssertionError             _i151                      item
AttributeError             _i152                      iter
BaseException              _i153                      lambda
BufferError                _i154                      last_names
BytesWarning               _i155                      len
Creative\ Cloud\ Files     _i156                      license
DeprecationWarning         _i157                      list
Desktop                    _i158                      locals
Developer                  _i159                      long
Documents                  _i16                       map
Downloads                  _i160                      max
Dropbox                    _i161                      memoryview
EOFError                   _i162                      min
Ellipsis                   _i163                      name
EnvironmentError           _i164                      names
Exception                  _i165                      next
False                      _i166                      nohup.out
FloatingPointError         _i167                      not
FutureWarning              _i168                      object
GeneratorExit              _i169                      oct
IOError                    _i17                       open
ImportError                _i18                       or
ImportWarning              _i19                       ord
In                         _i2                        pass
IndentationError           _i20                       pitchers
IndexError                 _i21                       pow
KeyError                   _i22                       print
KeyboardInterrupt          _i23                       property
Library                    _i24                       quit
LookupError                _i25                       raise
MDIGB0_ideal.xbgf          _i26                       range
Mathematica                _i27                       raw_input
MemoryError                _i28                       reduce
Movies                     _i29                       reload
Music                      _i3                        remove_punctuation
NameError                  _i30                       repr
None                       _i31                       requirement.txt
NotImplemented             _i32                       result
NotImplementedError        _i33                       return
OSError                    _i34                       reversed
Out                        _i35                       round
OverflowError              _i36                       s
Parallels                  _i37                       seaborn-data
PendingDeprecationWarning  _i38                       sep
Pictures                   _i39                       seq
Public                     _i4                        seq1
PycharmProjects            _i40                       seq2
ReferenceError             _i41                       set
RuntimeError               _i42                       setattr
RuntimeWarning             _i43                       slice
StandardError              _i44                       solarized
StopIteration              _i45                       sorted
SyntaxError                _i46                       states
SyntaxWarning              _i47                       staticmethod
SystemError                _i48                       str
SystemExit                 _i49                       strings
TabError                   _i5                        sum
True                       _i50                       super
TypeError                  _i51                       template
UnboundLocalError          _i52                       texput.log
UnicodeDecodeError         _i53                       time
UnicodeEncodeError         _i54                       try
UnicodeError               _i55                       tup
UnicodeTranslateError      _i56                       tuple
UnicodeWarning             _i57                       type
Untitled.ipynb             _i58                       unichr
UserWarning                _i59                       unicode
ValueError                 _i6                        vars
Warning                    _i60                       while
ZeroDivisionError          _i61                       with
_                          _i62                       x
_10                        _i63                       xrange
_101                       _i64                       y
_107                       _i65                       yield
_110                       _i66                       z
_112                       _i67                       zip
_113                       _i68                       
_118                       _i69                       

In [170]: def clean_strings(strings, ops):
        result = []
        for value in strings:
                for function in ops:value = function(value)
            result.append()
            return result
   .....:     
  File "<ipython-input-170-b081bc240367>", line 5
    result.append()
                   ^
IndentationError: unindent does not match any outer indentation level

If you want to paste code into IPython, try the %paste and %cpaste magic functions.

In [171]: def clean_strings(strings, ops):
        result = []
        for value in strings:
                for function in ops:
   .....:               value = function(value)
   .....:             result.append()
   .....:       return result
  File "<ipython-input-171-095c455844e1>", line 5
    value = function(value)
        ^
IndentationError: expected an indented block

If you want to paste code into IPython, try the %paste and %cpaste magic functions.

In [172]: def clean_strings(strings, ops):
   .....:       result = []
   .....:       for value in strings:
   .....:               for function in ops:
   .....:                       value = function(value)
   .....:               result.append(value)
   .....:             return result
   .....:         
  File "<ipython-input-172-1d9bb3af6be5>", line 7
    return result
                 ^
IndentationError: unindent does not match any outer indentation level

If you want to paste code into IPython, try the %paste and %cpaste magic functions.

In [173]: def clean_strings(strings, ops):
        result = []
        for value in strings:
                for function in ops:
                        value = function(value)
                result.append(value)
        return result
   .....:     

In [174]: clean_
clean_ops      clean_strings  

In [174]: clean_strings(states, clean_ops)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-174-8fa9572e3b3a> in <module>()
----> 1 clean_strings(states, clean_ops)

<ipython-input-173-89597a0d0081> in clean_strings(strings, ops)
      3         for value in strings:
      4                 for function in ops:
----> 5                         value = function(value)
      6                 result.append(value)
      7         return result

<ipython-input-166-fa3eb42703df> in remove_punctuation(value)
      1 def remove_punctuation(value):
----> 2         return re.sub('[!#?]', ' ', value)
      3 

NameError: global name 're' is not defined

In [175]: import re

In [176]: clean_strings(states, clean_ops)
Out[176]: 
['Alabama',
 'Georgia ',
 'Georgia',
 'Georgia',
 'Florida',
 'South Carolina  ',
 'West Virginia ']

In [177]: def say_hello_then_call_f(f, *args, **kwargs):
   .....:       print 'args is ', args
   .....:       print 'kwarg is ', kwargs
   .....:       print("Hello! Now I'm going to call %s" %f)
   .....:       return f(*args, **kwargs)
   .....: 

In [178]: def g(x, y, z = 1):
   .....:       return (x+y)/z
   .....: 

In [179]: say_hello_then_call_f(g, 1, 2, z = 5.)
args is  (1, 2)
kwarg is  {'z': 5.0}
Hello! Now I'm going to call <function g at 0x1040b6f50>
Out[179]: 0.6

In [180]: 
